#BlueJ class context
comment0.target=Ride
comment0.text=Class\ for\ the\ Rides\r\n
comment1.params=seed\ name\ minRank\ maxRank\ space\ length\ rideMaxCapacity\ queueCapacity\ injuryRate
comment1.target=Ride(int,\ java.lang.String,\ int,\ int,\ int,\ int,\ int,\ int,\ int)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Ride\r\n\ @param\ seed\ -\ seed\ for\ the\ random\ generator\r\n\ @param\ name\ -\ contains\ the\ name\ of\ the\ ride\r\n\ @param\ minRnak\ -\ contains\ the\ maximum\ rank\ of\ the\ rid\r\n\ @param\ space\ -\ the\ cost\ of\ the\ ride\r\n\ @param\ length\ -\ the\ steps\ it\ takes\ to\ complete\ a\ ride\r\n\ @param\ rideMaxCapacity\ -\ the\ maximum\ amout\ of\ people\ contained\ in\ the\ ride\r\n\ @param\ queueCapacity\ -\ the\ maximum\ number\ of\ people\ in\ the\ queue\ of\ the\ ride\r\n\ @param\ injuryRate\ -\ the\ percentage\ of\ being\ injured\ when\ riding\ the\ ride\r\n
comment10.params=
comment10.target=void\ increaseWaitTime()
comment10.text=increse\ wait\ time\ for\ people\ in\ queue
comment11.params=
comment11.target=int\ getMinRank()
comment11.text=getter\ for\ minimum\ Rank
comment12.params=
comment12.target=int\ getMaxRank()
comment12.text=getter\ for\ maximum\ Rank
comment13.params=
comment13.target=int\ getSpace()
comment13.text=getter\ for\ max\ space
comment14.params=
comment14.target=int\ getLength()
comment14.text=getter\ for\ length\ of\ ride
comment15.params=
comment15.target=int\ getRideMaxCapacity()
comment15.text=getter\ for\ minimum\ Rank
comment16.params=
comment16.target=int\ getCurrentCapacity()
comment16.text=getter\ for\ minimum\ Rank
comment17.params=
comment17.target=int\ getQueueCapacity()
comment17.text=getter\ for\ queue\ size
comment18.params=
comment18.target=int\ getQueueCurrentCapacity()
comment18.text=getter\ for\ queue\ size
comment19.params=
comment19.target=int\ getRideCounter()
comment19.text=getter\ for\ ride\ counter
comment2.params=seed\ r
comment2.target=Ride(int,\ Ride)
comment2.text=Constructor\ for\ ride\r\n\ @param\ seed\ -\ seed\ for\ the\ random\ generator\r\n\ @param\ Ride\ -\ the\ ride\ to\ copy\ parameters\ from\r\n
comment20.params=i
comment20.target=void\ setRideCounter(int)
comment20.text=setter\ for\ ride\ counter
comment21.params=k
comment21.target=void\ setRideKey(java.lang.Integer)
comment21.text=sets\ the\ keyfor\ the\ ride
comment22.params=
comment22.target=java.lang.Integer\ getRideKey()
comment22.text=getter\ foe\ ride\ key
comment23.params=
comment23.target=int\ getInjuryRate()
comment23.text=getter\ for\ Injury\ rate
comment24.params=
comment24.target=java.lang.String\ getName()
comment24.text=getter\ for\ name
comment25.params=
comment25.target=java.util.LinkedList\ getQueue()
comment25.text=gets\ the\ queue
comment26.params=
comment26.target=java.lang.String\ toString()
comment26.text=converts\ the\ infos\ of\ the\ ride\ to\ string
comment3.params=groupContainer
comment3.target=GroupContainer\ updateRideState(GroupContainer)
comment3.text=\ progress\ the\ ride\r\n\ @param\ groupContainer\ -\ the\ current\ groups\ of\ people\ in\ the\ park\ but\ not\ in\ rides\ or\ queues\r\n\ @return\ updated\ groupContainer\ after\ the\ state\ of\ ride\ is\ updated\r\n\ \ \ \ \ \ \ \r\n
comment4.params=groupContainer
comment4.target=GroupContainer\ fillRide(GroupContainer)
comment4.text=fill\ ride\ with\ groups\ of\ people\r\n\ @param\ groupContainer\ -\ the\ current\ groups\ of\ people\ in\ the\ park\ but\ not\ in\ rides\ or\ queues\r\n\ @return\ updated\ groupContainer\ after\ the\ filling\ the\ ride\r\n
comment5.params=groupContainer
comment5.target=GroupContainer\ fillQueue(GroupContainer)
comment5.text=fill\ queue\ of\ ride\ from\ group\ container\r\n\ @param\ groupContainer\ -\ \ the\ current\ groups\ of\ people\ in\ the\ park\ but\ not\ in\ rides\ or\ queues\r\n\ @return\ updated\ groupContainer\ after\ the\ filling\ the\ queue\r\n
comment6.params=gr
comment6.target=void\ addToRide(Group)
comment6.text=add\ a\ group\ to\ ride\r\n\ @param\ gr\ -\ the\ group\ to\ be\ added\ to\ the\ ride\r\n
comment7.params=gr
comment7.target=void\ addToQueue(Group)
comment7.text=add\ a\ group\ to\ queue\r\n\ @param\ gr\ -\ group\ to\ be\ added\ to\ the\ queue\r\n
comment8.params=
comment8.target=Group\ dequeue()
comment8.text=\ dequeue\ and\ return\ first\ person\ in\ queue\r\n\ @return\ return\ the\ first\ group\ in\ the\ queue\r\n
comment9.params=container
comment9.target=GroupContainer\ dischargeGroups(GroupContainer)
comment9.text=discharge\ a\ group\ to\ groupContainer\ and\ clear\ the\ ride\r\n\ @param\ container\ -\ the\ container\ of\ groups\ in\ the\ park\r\n\ @return\ return\ the\ container\ with\ the\ groups\ discharged\ added\ to\ it\r\n
numComments=27
